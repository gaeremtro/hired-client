{"ast":null,"code":"import axios from 'axios';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from './actionTypes';\nimport URL from './urlConfig'; // export function loadDetails() {\n//     return axios.get('http://localhost:4200/api/detail').then((detail) => {\n//         dispatcher.dispatch({\n//             type: actionTypes.LOAD_DETAIL,\n//             data: detail.data\n//         });\n//     });\n// }\n// eslint-disable-next-line import/prefer-default-export\n\nexport function loadDetails() {\n  return axios.get(URL.GET_ENTRIES).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.LOAD_DETAIL,\n        data: detailsRecives.data\n      });\n    } else dispatcher.dispatch({\n      type: actionTypes.ERROR,\n      data: new Error(detailsRecives.status)\n    });\n  });\n}\nexport function loginActions(username, password) {\n  return axios.post(URL.POST_LOGIN, {\n    params: {\n      username,\n      password\n    }\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.LOGIN,\n        data: detailsRecives.data\n      });\n    } else dispatcher.dispatch({\n      type: actionTypes.ERROR,\n      data: new Error(detailsRecives.status)\n    });\n  });\n}\n;\nexport function authVerification() {\n  return axios.post(URL.POST_VERIFICATION).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.LOGIN,\n        data: detailsRecives.data\n      });\n    } else dispatcher.dispatch({\n      type: actionTypes.ERROR,\n      data: new Error(detailsRecives.status)\n    });\n  });\n} // }","map":{"version":3,"sources":["/Users/gabrielpenalva/Documents/Skylab Hired/gabriel-penalva-skylab-hired/Client/skylab-hired/src/actions/userActions.js"],"names":["axios","dispatcher","actionTypes","URL","loadDetails","get","GET_ENTRIES","then","detailsRecives","status","dispatch","type","LOAD_DETAIL","data","ERROR","Error","loginActions","username","password","post","POST_LOGIN","params","LOGIN","authVerification","POST_VERIFICATION"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAOJ,KAAK,CAACK,GAAN,CAAUF,GAAG,CAACG,WAAd,EAA2BC,IAA3B,CAAiCC,cAAD,IAAoB;AACvD,QAAIA,cAAc,CAACC,MAAf,KAA0B,GAA9B,EAAmC;AAC/BR,MAAAA,UAAU,CAACS,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAET,WAAW,CAACU,WADF;AAEhBC,QAAAA,IAAI,EAAEL,cAAc,CAACK;AAFL,OAApB;AAIH,KALD,MAMKZ,UAAU,CAACS,QAAX,CAAoB;AACrBC,MAAAA,IAAI,EAAET,WAAW,CAACY,KADG;AAErBD,MAAAA,IAAI,EAAE,IAAIE,KAAJ,CAAUP,cAAc,CAACC,MAAzB;AAFe,KAApB;AAKR,GAZM,CAAP;AAaH;AAGD,OAAO,SAASO,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AAE7C,SAAOlB,KAAK,CAACmB,IAAN,CAAWhB,GAAG,CAACiB,UAAf,EAA2B;AAAEC,IAAAA,MAAM,EAAE;AAAEJ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAAV,GAA3B,EAA+DX,IAA/D,CAAqEC,cAAD,IAAoB;AAC3F,QAAIA,cAAc,CAACC,MAAf,KAA0B,GAA9B,EAAmC;AAC/BR,MAAAA,UAAU,CAACS,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAET,WAAW,CAACoB,KADF;AAEhBT,QAAAA,IAAI,EAAEL,cAAc,CAACK;AAFL,OAApB;AAIH,KALD,MAMKZ,UAAU,CAACS,QAAX,CAAoB;AACrBC,MAAAA,IAAI,EAAET,WAAW,CAACY,KADG;AAErBD,MAAAA,IAAI,EAAE,IAAIE,KAAJ,CAAUP,cAAc,CAACC,MAAzB;AAFe,KAApB;AAIR,GAXM,CAAP;AAaH;AAAA;AAED,OAAO,SAASc,gBAAT,GAA4B;AAC/B,SAAOvB,KAAK,CAACmB,IAAN,CAAWhB,GAAG,CAACqB,iBAAf,EAAkCjB,IAAlC,CAAwCC,cAAD,IAAoB;AAC9D,QAAIA,cAAc,CAACC,MAAf,KAA0B,GAA9B,EAAmC;AAC/BR,MAAAA,UAAU,CAACS,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAET,WAAW,CAACoB,KADF;AAEhBT,QAAAA,IAAI,EAAEL,cAAc,CAACK;AAFL,OAApB;AAIH,KALD,MAMKZ,UAAU,CAACS,QAAX,CAAoB;AACrBC,MAAAA,IAAI,EAAET,WAAW,CAACY,KADG;AAErBD,MAAAA,IAAI,EAAE,IAAIE,KAAJ,CAAUP,cAAc,CAACC,MAAzB;AAFe,KAApB;AAIR,GAXM,CAAP;AAYH,C,CACD","sourcesContent":["import axios from 'axios';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from './actionTypes';\nimport URL from './urlConfig'\n\n\n// export function loadDetails() {\n\n//     return axios.get('http://localhost:4200/api/detail').then((detail) => {\n//         dispatcher.dispatch({\n//             type: actionTypes.LOAD_DETAIL,\n//             data: detail.data\n//         });\n//     });\n// }\n\n// eslint-disable-next-line import/prefer-default-export\nexport function loadDetails() {\n    return axios.get(URL.GET_ENTRIES).then((detailsRecives) => {\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.LOAD_DETAIL,\n                data: detailsRecives.data\n            })\n        }\n        else dispatcher.dispatch({\n            type: actionTypes.ERROR,\n            data: new Error(detailsRecives.status)\n        })\n\n    });\n}\n\n\nexport function loginActions(username, password) {\n\n    return axios.post(URL.POST_LOGIN, { params: { username, password } }).then((detailsRecives) => {\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.LOGIN,\n                data: detailsRecives.data\n            })\n        }\n        else dispatcher.dispatch({\n            type: actionTypes.ERROR,\n            data: new Error(detailsRecives.status)\n        })\n    })\n\n};\n\nexport function authVerification() {\n    return axios.post(URL.POST_VERIFICATION).then((detailsRecives) => {\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.LOGIN,\n                data: detailsRecives.data\n            })\n        }\n        else dispatcher.dispatch({\n            type: actionTypes.ERROR,\n            data: new Error(detailsRecives.status)\n        })\n    })\n}\n// }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from './actionTypes';\nimport URL from './URL';\nexport function loadDetails() {\n  const token = global.sessionStorage.getItem('access-token');\n  axios.get(URL.GET_ENTRIES, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.LOAD_DETAIL,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}\nexport function loginActions(username, password) {\n  return axios.post(URL.POST_LOGIN, {\n    username,\n    password\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      global.sessionStorage.setItem('access-token', detailsRecives.data.token);\n      dispatcher.dispatch({\n        type: actionTypes.LOGIN,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}\nexport function registerActions(name, bootCamp, email, password, bday) {\n  return axios.post(URL.POST_REGISTER, {\n    name,\n    bootCamp,\n    email,\n    password,\n    bday\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.REGISTER,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}\nexport function loadEntries(entriesTipe, userId) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.get(`http://localhost:4200/api/user/${entriesTipe}?userId=${userId}`, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.LOAD_ENTRIES,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}\nexport function loadComments() {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.get(`http://localhost:4200/info/comments`, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.LOAD_COMMENTS,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}\nexport function addCommentActions(userId, textComment, entryId) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.post(`http://localhost:4200/info/comments`, {\n    userId,\n    textComment,\n    entryId\n  }, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.ADD_COMMENT,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}\nexport function addEntryAction(objectInfo) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.post(`http://localhost:4200/api/addEntry`, objectInfo, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      dispatcher.dispatch({\n        type: actionTypes.ADD_COMMENT,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.response.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: {\n          error: {\n            code: 1,\n            message: detailsRecives.toString()\n          }\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/gabrielpenalva/Documents/Skylab Hired/gabriel-penalva-skylab-hired/Client/skylab-hired/src/actions/userActions.js"],"names":["axios","dispatcher","actionTypes","URL","loadDetails","token","global","sessionStorage","getItem","get","GET_ENTRIES","headers","then","detailsRecives","status","dispatch","type","LOAD_DETAIL","data","ERROR","catch","response","error","code","message","toString","loginActions","username","password","post","POST_LOGIN","setItem","LOGIN","registerActions","name","bootCamp","email","bday","POST_REGISTER","REGISTER","loadEntries","entriesTipe","userId","LOAD_ENTRIES","loadComments","LOAD_COMMENTS","addCommentActions","textComment","entryId","ADD_COMMENT","addEntryAction","objectInfo"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from './actionTypes';\nimport URL from './URL';\n\nexport function loadDetails() {\n    const token = global.sessionStorage.getItem('access-token')\n    axios.get(URL.GET_ENTRIES, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.LOAD_DETAIL,\n                data: detailsRecives.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    })\n\n}\n\n\nexport function loginActions(username, password) {\n    return axios.post(URL.POST_LOGIN, { username, password }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            global.sessionStorage.setItem('access-token', detailsRecives.data.token)\n            dispatcher.dispatch({\n                type: actionTypes.LOGIN,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    }\n    )\n}\n\nexport function registerActions(name, bootCamp, email, password, bday) {\n    return axios.post(URL.POST_REGISTER, { name, bootCamp, email, password, bday }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.REGISTER,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    }\n    )\n}\n\nexport function loadEntries(entriesTipe, userId) {\n\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.get(`http://localhost:4200/api/user/${entriesTipe}?userId=${userId}`, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.LOAD_ENTRIES,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    }\n    )\n}\n\nexport function loadComments() {\n\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.get(`http://localhost:4200/info/comments`, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.LOAD_COMMENTS,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    }\n    )\n}\n\nexport function addCommentActions(userId, textComment, entryId) {\n    const token = global.sessionStorage.getItem('access-token')\n\n    return axios.post(`http://localhost:4200/info/comments`, { userId, textComment, entryId }, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.ADD_COMMENT,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    }\n    )\n}\n\nexport function addEntryAction(objectInfo) {\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.post(`http://localhost:4200/api/addEntry`, objectInfo, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            dispatcher.dispatch({\n                type: actionTypes.ADD_COMMENT,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n    }).catch((detailsRecives) => {\n        if (detailsRecives && detailsRecives.response && detailsRecives.response.data) {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.response.data\n            })\n        } else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: { error: { code: 1, message: detailsRecives.toString() } }\n            })\n        }\n    }\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}
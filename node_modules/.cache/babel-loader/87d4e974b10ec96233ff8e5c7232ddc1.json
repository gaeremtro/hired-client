{"ast":null,"code":"import axios from 'axios';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from './actionTypes';\nimport URL from './URL';\n\nfunction holdExceptions(recivedData) {\n  if (recivedData && recivedData.response && recivedData.response.data) {\n    dispatcher.dispatch({\n      type: actionTypes.ERROR,\n      data: recivedData.response.data\n    });\n  } else {\n    dispatcher.dispatch({\n      type: actionTypes.ERROR,\n      data: {\n        error: {\n          code: 1,\n          message: recivedData.toString()\n        }\n      }\n    });\n  }\n}\n\nfunction holdResponse(recibedData, tipe) {\n  if (recibedData.status === 200) {\n    dispatcher.dispatch({\n      type: tipe,\n      data: recibedData.data\n    });\n  } else {\n    dispatcher.dispatch({\n      type: actionTypes.ERROR,\n      data: recibedData.data\n    });\n  }\n}\n\nexport function loadDetails() {\n  const token = global.sessionStorage.getItem('access-token');\n  axios.get(URL.GET_ENTRIES, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.LOAD_DETAIL);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function loginActions(username, password) {\n  return axios.post(URL.POST_LOGIN, {\n    username,\n    password\n  }).then(detailsRecives => {\n    if (detailsRecives.status === 200) {\n      global.sessionStorage.setItem('access-token', detailsRecives.data.token);\n      dispatcher.dispatch({\n        type: actionTypes.LOGIN,\n        data: detailsRecives.data\n      });\n    } else {\n      dispatcher.dispatch({\n        type: actionTypes.ERROR,\n        data: detailsRecives.data\n      });\n    }\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function registerActions(name, bootCamp, email, password, bday) {\n  return axios.post(URL.POST_REGISTER, {\n    name,\n    bootCamp,\n    email,\n    password,\n    bday\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.REGISTER);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function loadEntries(entriesTipe, userId) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.get(`http://localhost:4200/api/user/${entriesTipe}?userId=${userId}`, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.LOAD_ENTRIES);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function loadComments() {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.get(`http://localhost:4200/info/comments`, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.LOAD_COMMENTS);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function addCommentActions(userId, textComment, entryId) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.post(`http://localhost:4200/info/comments`, {\n    userId,\n    textComment,\n    entryId\n  }, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.ADD_COMMENT);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function addEntryAction(objectInfo) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.post(`http://localhost:4200/api/addEntry`, objectInfo, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.ADD_ENTRY);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}\nexport function editUser(objectInfo) {\n  const token = global.sessionStorage.getItem('access-token');\n  return axios.put(`http://localhost:4200/api/edit`, objectInfo, {\n    headers: {\n      'access-token': token\n    }\n  }).then(detailsRecives => {\n    holdResponse(detailsRecives, actionTypes.ADD_ENTRY);\n  }).catch(detailsRecives => {\n    holdExceptions(detailsRecives);\n  });\n}","map":{"version":3,"sources":["/Users/gabrielpenalva/Documents/Skylab Hired/gabriel-penalva-skylab-hired/Client/skylab-hired/src/actions/userActions.js"],"names":["axios","dispatcher","actionTypes","URL","holdExceptions","recivedData","response","data","dispatch","type","ERROR","error","code","message","toString","holdResponse","recibedData","tipe","status","loadDetails","token","global","sessionStorage","getItem","get","GET_ENTRIES","headers","then","detailsRecives","LOAD_DETAIL","catch","loginActions","username","password","post","POST_LOGIN","setItem","LOGIN","registerActions","name","bootCamp","email","bday","POST_REGISTER","REGISTER","loadEntries","entriesTipe","userId","LOAD_ENTRIES","loadComments","LOAD_COMMENTS","addCommentActions","textComment","entryId","ADD_COMMENT","addEntryAction","objectInfo","ADD_ENTRY","editUser","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACjC,MAAIA,WAAW,IAAIA,WAAW,CAACC,QAA3B,IAAuCD,WAAW,CAACC,QAAZ,CAAqBC,IAAhE,EAAsE;AAClEN,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAEP,WAAW,CAACQ,KADF;AAEhBH,MAAAA,IAAI,EAAEF,WAAW,CAACC,QAAZ,CAAqBC;AAFX,KAApB;AAIH,GALD,MAKO;AACHN,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAEP,WAAW,CAACQ,KADF;AAEhBH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAER,WAAW,CAACS,QAAZ;AAApB;AAAT;AAFU,KAApB;AAIH;AACJ;;AAED,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,IAAnC,EAAyC;AACrC,MAAID,WAAW,CAACE,MAAZ,KAAuB,GAA3B,EAAgC;AAC5BjB,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAEQ,IADU;AAEhBV,MAAAA,IAAI,EAAES,WAAW,CAACT;AAFF,KAApB;AAIH,GALD,MAKO;AACHN,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAEP,WAAW,CAACQ,KADF;AAEhBH,MAAAA,IAAI,EAAES,WAAW,CAACT;AAFF,KAApB;AAIH;AACJ;;AAED,OAAO,SAASY,WAAT,GAAuB;AAC1B,QAAMC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,CAAd;AACAvB,EAAAA,KAAK,CAACwB,GAAN,CAAUrB,GAAG,CAACsB,WAAd,EAA2B;AAAEC,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAA3B,EAAmEO,IAAnE,CAAyEC,cAAD,IAAoB;AACxFb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAAC2B,WAA7B,CAAZ;AACH,GAFD,EAEGC,KAFH,CAEUF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GAJD;AAMH;AAGD,OAAO,SAASG,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AAC7C,SAAOjC,KAAK,CAACkC,IAAN,CAAW/B,GAAG,CAACgC,UAAf,EAA2B;AAAEH,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA3B,EAAmDN,IAAnD,CAAyDC,cAAD,IAAoB;AAE/E,QAAIA,cAAc,CAACV,MAAf,KAA0B,GAA9B,EAAmC;AAC/BG,MAAAA,MAAM,CAACC,cAAP,CAAsBc,OAAtB,CAA8B,cAA9B,EAA8CR,cAAc,CAACrB,IAAf,CAAoBa,KAAlE;AACAnB,MAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAEP,WAAW,CAACmC,KADF;AAEhB9B,QAAAA,IAAI,EAAEqB,cAAc,CAACrB;AAFL,OAApB;AAIH,KAND,MAOK;AACDN,MAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAEP,WAAW,CAACQ,KADF;AAEhBH,QAAAA,IAAI,EAAEqB,cAAc,CAACrB;AAFL,OAApB;AAIH;AAGJ,GAjBM,EAiBJuB,KAjBI,CAiBGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GAnBM,CAAP;AAqBH;AAED,OAAO,SAASU,eAAT,CAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDR,QAAhD,EAA0DS,IAA1D,EAAgE;AACnE,SAAO1C,KAAK,CAACkC,IAAN,CAAW/B,GAAG,CAACwC,aAAf,EAA8B;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,KAAlB;AAAyBR,IAAAA,QAAzB;AAAmCS,IAAAA;AAAnC,GAA9B,EAAyEf,IAAzE,CAA+EC,cAAD,IAAoB;AACrGb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAAC0C,QAA7B,CAAZ;AAIH,GALM,EAKJd,KALI,CAKGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GAPM,CAAP;AASH;AAED,OAAO,SAASiB,WAAT,CAAqBC,WAArB,EAAkCC,MAAlC,EAA0C;AAE7C,QAAM3B,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,CAAd;AACA,SAAOvB,KAAK,CAACwB,GAAN,CAAW,kCAAiCsB,WAAY,WAAUC,MAAO,EAAzE,EAA4E;AAAErB,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAA5E,EAAoHO,IAApH,CAA0HC,cAAD,IAAoB;AAChJb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAAC8C,YAA7B,CAAZ;AAEH,GAHM,EAGJlB,KAHI,CAGGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GALM,CAAP;AAOH;AAED,OAAO,SAASqB,YAAT,GAAwB;AAE3B,QAAM7B,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,CAAd;AACA,SAAOvB,KAAK,CAACwB,GAAN,CAAW,qCAAX,EAAiD;AAAEE,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAAjD,EAAyFO,IAAzF,CAA+FC,cAAD,IAAoB;AAErHb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAACgD,aAA7B,CAAZ;AAGH,GALM,EAKJpB,KALI,CAKGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GAPM,CAAP;AASH;AAED,OAAO,SAASuB,iBAAT,CAA2BJ,MAA3B,EAAmCK,WAAnC,EAAgDC,OAAhD,EAAyD;AAC5D,QAAMjC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,CAAd;AAEA,SAAOvB,KAAK,CAACkC,IAAN,CAAY,qCAAZ,EAAkD;AAAEa,IAAAA,MAAF;AAAUK,IAAAA,WAAV;AAAuBC,IAAAA;AAAvB,GAAlD,EAAoF;AAAE3B,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAApF,EAA4HO,IAA5H,CAAkIC,cAAD,IAAoB;AAExJb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAACoD,WAA7B,CAAZ;AAGH,GALM,EAKJxB,KALI,CAKGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GAPM,CAAP;AASH;AAED,OAAO,SAAS2B,cAAT,CAAwBC,UAAxB,EAAoC;AACvC,QAAMpC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,CAAd;AACA,SAAOvB,KAAK,CAACkC,IAAN,CAAY,oCAAZ,EAAiDsB,UAAjD,EAA6D;AAAE9B,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAA7D,EAAqGO,IAArG,CAA2GC,cAAD,IAAoB;AAEjIb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAACuD,SAA7B,CAAZ;AAEH,GAJM,EAIJ3B,KAJI,CAIGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GANM,CAAP;AAQH;AACD,OAAO,SAAS8B,QAAT,CAAkBF,UAAlB,EAA8B;AACjC,QAAMpC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,CAAd;AACA,SAAOvB,KAAK,CAAC2D,GAAN,CAAW,gCAAX,EAA4CH,UAA5C,EAAwD;AAAE9B,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAAxD,EAAgGO,IAAhG,CAAsGC,cAAD,IAAoB;AAC5Hb,IAAAA,YAAY,CAACa,cAAD,EAAiB1B,WAAW,CAACuD,SAA7B,CAAZ;AACH,GAFM,EAEJ3B,KAFI,CAEGF,cAAD,IAAoB;AACzBxB,IAAAA,cAAc,CAACwB,cAAD,CAAd;AACH,GAJM,CAAP;AAMH","sourcesContent":["import axios from 'axios';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from './actionTypes';\nimport URL from './URL';\n\nfunction holdExceptions(recivedData) {\n    if (recivedData && recivedData.response && recivedData.response.data) {\n        dispatcher.dispatch({\n            type: actionTypes.ERROR,\n            data: recivedData.response.data\n        })\n    } else {\n        dispatcher.dispatch({\n            type: actionTypes.ERROR,\n            data: { error: { code: 1, message: recivedData.toString() } }\n        })\n    }\n}\n\nfunction holdResponse(recibedData, tipe) {\n    if (recibedData.status === 200) {\n        dispatcher.dispatch({\n            type: tipe,\n            data: recibedData.data\n        })\n    } else {\n        dispatcher.dispatch({\n            type: actionTypes.ERROR,\n            data: recibedData.data\n        })\n    }\n}\n\nexport function loadDetails() {\n    const token = global.sessionStorage.getItem('access-token')\n    axios.get(URL.GET_ENTRIES, { headers: { 'access-token': token } }).then((detailsRecives) => {\n        holdResponse(detailsRecives, actionTypes.LOAD_DETAIL)\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    })\n\n}\n\n\nexport function loginActions(username, password) {\n    return axios.post(URL.POST_LOGIN, { username, password }).then((detailsRecives) => {\n\n        if (detailsRecives.status === 200) {\n            global.sessionStorage.setItem('access-token', detailsRecives.data.token)\n            dispatcher.dispatch({\n                type: actionTypes.LOGIN,\n                data: detailsRecives.data\n            })\n        }\n        else {\n            dispatcher.dispatch({\n                type: actionTypes.ERROR,\n                data: detailsRecives.data\n            })\n        }\n\n\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\n\nexport function registerActions(name, bootCamp, email, password, bday) {\n    return axios.post(URL.POST_REGISTER, { name, bootCamp, email, password, bday }).then((detailsRecives) => {\n        holdResponse(detailsRecives, actionTypes.REGISTER)\n\n\n\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\n\nexport function loadEntries(entriesTipe, userId) {\n\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.get(`http://localhost:4200/api/user/${entriesTipe}?userId=${userId}`, { headers: { 'access-token': token } }).then((detailsRecives) => {\n        holdResponse(detailsRecives, actionTypes.LOAD_ENTRIES)\n\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\n\nexport function loadComments() {\n\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.get(`http://localhost:4200/info/comments`, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        holdResponse(detailsRecives, actionTypes.LOAD_COMMENTS)\n\n\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\n\nexport function addCommentActions(userId, textComment, entryId) {\n    const token = global.sessionStorage.getItem('access-token')\n\n    return axios.post(`http://localhost:4200/info/comments`, { userId, textComment, entryId }, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        holdResponse(detailsRecives, actionTypes.ADD_COMMENT)\n\n\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\n\nexport function addEntryAction(objectInfo) {\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.post(`http://localhost:4200/api/addEntry`, objectInfo, { headers: { 'access-token': token } }).then((detailsRecives) => {\n\n        holdResponse(detailsRecives, actionTypes.ADD_ENTRY)\n\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\nexport function editUser(objectInfo) {\n    const token = global.sessionStorage.getItem('access-token')\n    return axios.put(`http://localhost:4200/api/edit`, objectInfo, { headers: { 'access-token': token } }).then((detailsRecives) => {\n        holdResponse(detailsRecives, actionTypes.ADD_ENTRY)\n    }).catch((detailsRecives) => {\n        holdExceptions(detailsRecives)\n    }\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}
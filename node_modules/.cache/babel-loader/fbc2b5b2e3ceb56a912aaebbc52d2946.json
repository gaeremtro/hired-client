{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielpenalva/Documents/Skylab Hired/gabriel-penalva-skylab-hired/Client/skylab-hired/src/components/popupInfo.component.jsx\";\nimport React, { useState } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }));\n} // const useStyles = makeStyles((theme) => ({\n// \troot: {\n// \t\twidth: '100%',\n// \t\t'& > * + *': {\n// \t\t\tmarginTop: theme.spacing(2)\n// \t\t}\n// \t}\n// }));\n\n\nexport default function popUp() {\n  // const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 2000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"This is an error message!\")));\n}","map":{"version":3,"sources":["/Users/gabrielpenalva/Documents/Skylab Hired/gabriel-penalva-skylab-hired/Client/skylab-hired/src/components/popupInfo.component.jsx"],"names":["React","useState","Snackbar","MuiAlert","makeStyles","Alert","props","popUp","open","setOpen","handleClose","event","reason"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACrB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMS,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC3B;AACA;;AAEDH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAND;;AAQA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,IAAxC;AAA8C,IAAA,OAAO,EAAEE,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,CADD,CADD;AAaA","sourcesContent":["import React, { useState } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// const useStyles = makeStyles((theme) => ({\n// \troot: {\n// \t\twidth: '100%',\n// \t\t'& > * + *': {\n// \t\t\tmarginTop: theme.spacing(2)\n// \t\t}\n// \t}\n// }));\n\nexport default function popUp() {\n\t// const classes = useStyles();\n\tconst [open, setOpen] = useState(true);\n\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\n\t\t\t\t\tThis is an error message!\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\n\t\t\t{/* <Alert severity=\"warning\">This is a warning message!</Alert>\n\t\t\t<Alert severity=\"info\">This is an information message!</Alert>\n\t\t\t<Alert severity=\"success\">This is a success message!</Alert> */}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
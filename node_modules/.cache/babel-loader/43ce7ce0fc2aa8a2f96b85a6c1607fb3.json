{"ast":null,"code":"import { EventEmitter } from 'events';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from '../actions/actionTypes';\nconst CHANGE_EVENT = 'change';\nlet detail = [];\n\nclass DBStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  getDetail() {\n    console.log(detail);\n    return detail;\n  }\n\n}\n\nconst store = new DBStore();\ndispatcher.register(action => {\n  switch (action.type) {\n    case actionTypes.LOAD_DETAIL:\n      detail = action.data;\n      store.emitChange();\n      break;\n\n    default:\n      break;\n  }\n});\nexport default store;","map":{"version":3,"sources":["/Users/gabrielpenalva/Documents/Skylab Hired/gabriel-penalva-skylab-hired/Client/skylab-hired/src/store/store.js"],"names":["EventEmitter","dispatcher","actionTypes","CHANGE_EVENT","detail","DBStore","addChangeListener","callback","on","removeChangeListener","removeListener","emitChange","emit","getDetail","console","log","store","register","action","type","LOAD_DETAIL","data"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,YAAY,GAAG,QAArB;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,OAAN,SAAsBL,YAAtB,CAAmC;AAG/BM,EAAAA,iBAAiB,CAACC,QAAD,EAAW;AACxB,SAAKC,EAAL,CAAQL,YAAR,EAAsBI,QAAtB;AACH;;AAEDE,EAAAA,oBAAoB,CAACF,QAAD,EAAW;AAC3B,SAAKG,cAAL,CAAoBP,YAApB,EAAkCI,QAAlC;AACH;;AAEDI,EAAAA,UAAU,GAAG;AACT,SAAKC,IAAL,CAAUT,YAAV;AACH,GAb8B,CAe/B;;;AACAU,EAAAA,SAAS,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,WAAOA,MAAP;AACH;;AAnB8B;;AAuBnC,MAAMY,KAAK,GAAG,IAAIX,OAAJ,EAAd;AACAJ,UAAU,CAACgB,QAAX,CAAqBC,MAAD,IAAY;AAE5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,WAAW,CAACkB,WAAjB;AACIhB,MAAAA,MAAM,GAAGc,MAAM,CAACG,IAAhB;AACAL,MAAAA,KAAK,CAACL,UAAN;AACA;;AACJ;AACI;AANR;AAQH,CAVD;AAYA,eAAeK,KAAf","sourcesContent":["import { EventEmitter } from 'events';\nimport dispatcher from '../dispatcher/app.dispatcher';\nimport actionTypes from '../actions/actionTypes';\n\nconst CHANGE_EVENT = 'change';\nlet detail = [];\n\nclass DBStore extends EventEmitter {\n\n\n    addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n\n    emitChange() {\n        this.emit(CHANGE_EVENT);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getDetail() {\n        console.log(detail)\n        return detail;\n    }\n\n}\n\nconst store = new DBStore();\ndispatcher.register((action) => {\n\n    switch (action.type) {\n        case actionTypes.LOAD_DETAIL:\n            detail = action.data;\n            store.emitChange();\n            break;\n        default:\n            break;\n    }\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}